name: deploy-prod

on:
  push:
    branches: [master]

jobs:
  build:
    name: build prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2

      - name: Check out code
        uses: actions/checkout@v2

      - name: Checkout git repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies with Yarn
        run: yarn install

      - name: Build
        run: yarn build:prod

      #TODO: fix test
      # - name: Test
      #   run: yarn ng test --watch=false --browsers=ChromeHeadlessPuppeteer

      #TODO: fix test e2e
      # - name: Test e2e
      #   run: yarn e2e

  deploy:
    name: deploy prod
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME_PROD }}
      AWS_CF_DISTRIBUTION_ID: ${{ secrets.AWS_CF_DISTRIBUTION_ID_PROD }}
      AWS_CF_MASTER_DISTRIBUTION_ID: ${{ secrets.AWS_CF_MASTER_DISTRIBUTION_ID_PROD }}
    steps:
      - uses: actions/setup-node@v2

      - name: Checkout git repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies with Yarn
        run: yarn install

      - name: Build
        run: yarn build:prod
